$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;
  @if $exp > 1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }
  @if $exp < 1{
    @for $i from 0 through -$exp {
      $value: $value / $base;
    }
  }
  @return $value;
}

@function fact($num) {
  $fact: 1;
  @if $num > 0{
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }
  @return $fact;
}

@function _to_unitless_rad($angle) {
  @if unit($angle) == "deg" {
    $angle: $angle / 180deg * $pi;
  }
  @if unit($angle) == "rad" {
    $angle: $angle / 1rad;
  }
  @return $angle;
}

@function sin($angle){
  $a: _to_unitless_rad($angle);
  $sin: $a;
  @for $n from 1 through $_precision {
    $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1) ) * pow($a, (2 * $n + 1));
  }
  @return $sin;
}

@function cos($angle){
  $a: _to_unitless_rad($angle);
  $cos: 1;
  @for $n from 1 through $_precision {
    $cos: $cos + ( pow(-1,$n) / fact(2*$n) ) * pow($a,2*$n);
  }
  @return $cos;
}

@function tan($angle){
  @return sin($angle) / cos($angle);
}

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

@mixin hexagon($size: 300px, $background: url(http://placekitten.com/g/650), $shadow: 0 0 20px rgba(0,0,0,0.8), $borderWidth: 3px){
  $scaleFactor: tan(30deg); /*this smushes a square into a 60deg/120deg rhombus*/
  $inverseScale: 1/$scaleFactor;
  $sideLength: $size/sqrt(3);
  $totalHeight: $sideLength + $size;
  $boxShadow: $shadow;
  $scaledBorderWidth: $borderWidth/$scaleFactor;
  $border: solid #{$borderWidth} #fff;
  $scaledBorder: solid #{$scaledBorderWidth} #fff;

  position: relative;
  width: $size;
  height: $sideLength;
  margin-top: $size/3;
  margin-bottom: $size/3;
  background: $background;
  background-size: $totalHeight auto;
  background-position: center center;
  box-shadow: $boxShadow;
  border-left: $border;
  border-right: $border;

  .hex1,
  .hex2 {
    position: absolute;
    overflow: hidden;
    width: $size/sqrt(2);
    height: $size/sqrt(2);
    left: $sideLength/4 - $borderWidth + 1px; /*for some reason this 1px correction is needed */
    background: inherit;
    box-shadow: $boxShadow;
    @include transform(scaleY(#{$scaleFactor}) rotate(-45deg));

    &:after {
      /*counter rotate and un-scale the bg image*/
      content: "";
      position: absolute;
      left: -($sideLength/4 + 1px); /*same correction as up above */
      width: $size;
      height: $size/sqrt(2);
      top: 0;
      background: inherit;

      @include transform(rotate(45deg) scaleY(#{$inverseScale}));
    }
  }

  .hex1 {
    top: - $size/sqrt(2)/2;
    border-top: $scaledBorder;
    border-right: $scaledBorder;

    &:after {
      background-position: center 17%;
      margin-top: -$scaledBorderWidth;
    }
  }

  .hex2 {
    bottom: -$size/sqrt(2)/2;
    border-left: $scaledBorder;
    border-bottom: $scaledBorder;

    &:after {
      background-position: center 83%;
      margin-left: - $scaledBorderWidth + 1px; /*that pesky single pixel correction again*/
    }
  }

  /*cover up the box shadows */
  &:after {
    content: "";
    position: absolute;
    top: $borderWidth/sqrt(2);
    bottom: 0;
    left: 0;
    right: 0;
    height: $sideLength - 2*$borderWidth/sqrt(2);
    background: inherit;
  }
}

.hexagon3 {
  @include hexagon(150px, url(http://placekitten.com/g/250));
}